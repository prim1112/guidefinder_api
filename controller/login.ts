import { Request, Response, Router } from "express";
import bcrypt from "bcrypt";
import db from "../db/dbconnect";
import { RowDataPacket } from "mysql2";

export const router = Router();

// ‚úÖ Login (‡πÅ‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô customer ‡∏´‡∏£‡∏∑‡∏≠ guide)
router.post("/login", async (req: Request, res: Response) => {
  const { email, password } = req.body;

  try {
    if (!email || !password) {
      return res
        .status(400)
        .json({ message: "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Email ‡πÅ‡∏•‡∏∞ Password" });
    }

    // üîç 1Ô∏è‚É£ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á customer
    const [customerRows] = await db.execute<RowDataPacket[]>(
      "SELECT * FROM customer WHERE email = ?",
      [email]
    );

    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô customer
    if (customerRows.length > 0) {
      const user = customerRows[0];
      if (!user) {
        return res.status(400).json({ message: "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ" });
      }

      const isPasswordValid = await bcrypt.compare(password, user.password);
      if (!isPasswordValid) {
        return res.status(400).json({ message: "‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" });
      }

      return res.json({
        message: "‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (Customer)",
        role: "customer",
        user: {
          cid: user.cid,
          name: user.name,
          phone: user.phone,
          email: user.email,
          image_customer: user.image_customer,
        },
      });
    }

    // üîç 2Ô∏è‚É£ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô customer ‚Üí ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô guide
    const [guideRows] = await db.execute<RowDataPacket[]>(
      "SELECT * FROM guide WHERE email = ?",
      [email]
    );

    if (guideRows.length === 0) {
      return res.status(400).json({ message: "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ" });
    }

    const guide = guideRows[0];
    if (!guide) {
      return res.status(400).json({ message: "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ" });
    }

    const isGuidePasswordValid = await bcrypt.compare(password, guide.password);
    if (!isGuidePasswordValid) {
      return res.status(400).json({ message: "‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" });
    }

    // ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (Guide)
    return res.json({
      message: "‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (Guide)",
      role: "guide",
      user: {
        gid: guide.gid,
        name: guide.name,
        phone: guide.phone,
        email: guide.email,
        facebook: guide.facebook,
        language: guide.language,
        image_guide: guide.image_guide,
        tourism_guide_license: guide.tourism_guide_license,
        tourism_business_license: guide.tourism_business_license,
        status: guide.status,
      },
    });
  } catch (err: any) {
    console.error("Error in login:", err);
    res.status(500).json({ message: "‚ùå Server Error", error: err.message });
  }
});

export default router;
